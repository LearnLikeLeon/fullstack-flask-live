services:
  #nextjs service
  nextapp:
    container_name: nextapp
    image: nextapp:1.0.0
    build:
      context: ./frontend
      dockerfile: next.dockerfile
    ports:
      - 3000:3000
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:4000
    depends_on:
      - flaskapp

  # flask service
  flaskapp:
    container_name: flaskapp
    image: flaskapp:1.0.0
    build:
      context: ./backend
      dockerfile: flask.dockerfile
    ports:
      - 4000:4000
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
    depends_on:
      - db

  # For the database ' db ' service
  db:
    container_name: db
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata: {}
# To create this file : $ touch compose.yml
# To run this file which will run the database service : $ docker compose up -d db
# To verify your composed service : $ docker ps -a
# To check what is inside the container : $ docker exec -it db psql -U postgres
# inside the postgres terminal , run : '\l ' to view  and ' \dt ' to find database relations

# To run this file which will build the flaskapp service : $ docker compose build flaskapp
# To run this file which will run the flaskapp service : $ docker compose up -d flaskapp

# To test this api using postman ' Get ' : http://localhost:4000/api/flask/users
